import logging

log = logging.getLogger(__name__)

class DictUtils():
    @staticmethod
    def search(
        data: dict,
        path: str,
        sep: str = "."
    ) -> str: # or dict/list or None
        """Function that returns an item from the dictionary along 
        the given path 
        
        :param data: search dictionary
        :type data: dict

        :param path: search path
        :type path: dict

        :return: element located in the given dictionary along 
            the given path
        :rtype: dict if success, else NoneType
        """
        
        path_trail = [node.strip() for node in path.split(sep)]
        search_data = data
        
        try:
            for node in path_trail:
                search_data = search_data[node]
            return search_data
        
        except KeyError as KE:
            log.info(f"KeyError: Dictionary hasn\'t element by path {path}.")
            return